@import '../../styles/base';

.wrapper {
  background-color: var(--jt-bg-off);
}

.things {
  opacity: 0;

  transform: translate3d(0, -10px, 0);

  &.animate {
    transition: {
      duration: 0.3s;
      property: opacity, transform;
      timing-function: ease;
    }
  }

  &.show {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }
}

.iframe {
  width: 100%;
  height: 100%;
}

.attribution {
  display: flex;

  padding: var(--jt-padding) 0;

  justify-content: space-between;

  &Fullscreen {
    @include container;

    position: absolute;

    bottom: var(--jt-padding);
    left: 50%;

    transform: translate3d(-50%, 0, 0);

    mix-blend-mode: exclusion;
  }

  &Action {

    button {
      color: var(--jt-color-accent);
      border: 0;

      padding: 0;
      margin: 0;

      outline: 0;

      cursor: pointer;

      background-color: transparent;

      transition: {
        duration: 0.3s;
        property: color;
      }

      &:hover,
      &:focus {
        color: var(--jt-color-accent-light-1);
      }
    }
  }
}

.pool {
  display: grid;
  grid-template-columns: 1fr;

  padding: calc(var(--jt-padding) * 2);

  @include breakpoint(tablet) {
    grid-template-columns: 1fr 1fr;
    grid-column-gap: calc(var(--jt-padding) * 2);
  }

  @include breakpointSize(1280px) {
    padding: calc(var(--jt-padding) * 2) calc(var(--jt-padding) * 4);

    grid-template-columns: 1fr 1fr 1fr;
    grid-column-gap: calc(var(--jt-padding) * 5);
  }

  @include breakpointSize(1440px) {
    padding: calc(var(--jt-padding) * 2) calc(var(--jt-padding) * 4);

    grid-template-columns: 1fr 1fr 1fr 1fr;
    grid-column-gap: calc(var(--jt-padding) * 5);
  }
}


.item {
  margin-bottom: calc(var(--jt-padding) * 5);

  @include breakpoint(tablet) {
    opacity: 0.4;

    transition: {
      duration: 0.3s;
      property: opacity;
    }

    &:hover {
      opacity: 1;
    }
  }
}
